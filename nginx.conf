events {}

http {
    upstream user_service {
        server user-service:3001;
    }

    upstream task_service {
        server task-service:3002;
    }

    # Limitaci칩n de requests y conexiones
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Configuraci칩n de timeouts
    send_timeout 5s;
    client_body_timeout 10s;
    client_header_timeout 10s;

    server {
        listen 80;
        server_name localhost;  # Reemplaza con tu nombre de servidor si es necesario

        # Sirve el frontend est치tico
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy para /api/tasks hacia task-service
        location /api/tasks/ {
            proxy_pass http://task_service$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy para /api/users hacia user-service
        location /api/users/ {
            proxy_pass http://user_service$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check para el API Gateway
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # Aplicar limitaci칩n de requests globalmente para todas las ubicaciones
        location / {
            limit_req zone=one burst=20 nodelay;
            limit_conn addr 1;
            proxy_pass http://localhost;
        }
    }
}
